// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Provides AI-powered suggestions for optimizing business operations.
 *
 * - `getOptimizationSuggestions` - A function that returns optimization suggestions.
 * - `OptimizationSuggestionInput` - The input type for the `getOptimizationSuggestions` function.
 * - `OptimizationSuggestionOutput` - The return type for the `getOptimizationSuggestions` function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizationSuggestionInputSchema = z.object({
  businessDescription: z
    .string()
    .describe('A description of the business, its operations, and its goals.'),
  financialData: z
    .string()
    .describe(
      'Relevant financial data for the business, including revenue, expenses, and profit margins.'
    ),
  marketTrends: z
    .string()
    .optional()
    .describe('Optional: Information about current market trends.'),
});
export type OptimizationSuggestionInput = z.infer<
  typeof OptimizationSuggestionInputSchema
>;

const OptimizationSuggestionOutputSchema = z.object({
  suggestions: z
    .array(z.string())
    .describe(
      'A list of AI-powered suggestions for optimizing business operations.'
    ),
  reasoning: z
    .string()
    .describe(
      'The AI reasoning behind the suggested optimizations, explaining why each suggestion is relevant and how it can help the business.'
    ),
});
export type OptimizationSuggestionOutput = z.infer<
  typeof OptimizationSuggestionOutputSchema
>;

export async function getOptimizationSuggestions(
  input: OptimizationSuggestionInput
): Promise<OptimizationSuggestionOutput> {
  return suggestOptimizationsFlow(input);
}

const suggestOptimizationsPrompt = ai.definePrompt({
  name: 'suggestOptimizationsPrompt',
  input: {schema: OptimizationSuggestionInputSchema},
  output: {schema: OptimizationSuggestionOutputSchema},
  prompt: `You are an AI-powered business consultant. Your role is to provide actionable suggestions for optimizing business operations based on the information provided.

  Here's information about the business:
  Business Description: {{{businessDescription}}}
  Financial Data: {{{financialData}}}
  Market Trends: {{{marketTrends}}}

  Provide a list of specific, actionable suggestions, and explain the reasoning behind each suggestion. Focus on optimizing revenue, reducing expenses, or improving profitability.

  Format the output as a JSON object with 'suggestions' (an array of strings) and 'reasoning' (a string explaining the suggestions).`,
});

const suggestOptimizationsFlow = ai.defineFlow(
  {
    name: 'suggestOptimizationsFlow',
    inputSchema: OptimizationSuggestionInputSchema,
    outputSchema: OptimizationSuggestionOutputSchema,
  },
  async input => {
    const {output} = await suggestOptimizationsPrompt(input);
    return output!;
  }
);
